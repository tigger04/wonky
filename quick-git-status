#!/usr/bin/env bash

### why did i do this ... meant to do it for alladd etc ... ###
### but i'll implement it in gui-launcher.py instead
if [ $# -gt 0 ] && [[ "$1" == "--notify" ]]; then
    shift
    export disable_colors=true
    qgs_output=$(mktemp).log
    "$0" "$@" >$qgs_output 2>&1
    ~/bin/notify <$qgs_output
    sleep 3
    rm $qgs_output
    exit 0
fi

#shellcheck source=helper.sh
source ~/bin/helper.sh
source ~/.colours.sh

# notify "$0 $*"

gitcap=$(mktemp)
touch $gitcap

# fancymap=( '\U1F10C' '\U278A' '\U278B' '\U278C' '\U278D' '\U278E' '\U278F' '\U2790' '\U2791' '\U2792' '\U2793' )
# plus='+'
ok="✅"

use_one_line=false
only_show_status=false

if [[ "$1" == "-1" ]]; then
    use_one_line=true
    shift
elif [[ "$1" == "-01" ]]; then
    only_show_status=true
    shift
else
    use_one_line=false
fi

if [[ "$1" == "--env" ]]; then
    shift
    set -- "${repos[@]}"
fi

if [ $# -eq 0 ]; then
    set -- "$PWD"
fi

for dir in "$@"; do

    unset dead
    cd "$dir" 2>/dev/null ||
        dead=true \
            info="💀" \
            color="$grey"

    if ! [ $dead ]; then
        git status --porcelain >$gitcap 2>$gitcap.error
        # gitcap_chars=$( wc -c < $gitcap )
        gitcap_lines=$(wc -l <$gitcap)
        gitcap_lines=$((gitcap_lines + 0)) # remove spacing

        if [ -e $gitcap.error ] && [ $(wc -c <$gitcap.error) -gt 0 ]; then
            continue
            # color="$blue"
            # info=""
        else
            if [ $gitcap_lines -eq 0 ]; then
                color="${bigreen}"
                info="$ok"
            elif [ $gitcap_lines -gt 0 ]; then
                color="${black}${on_yellow}"
                if [ $gitcap_lines -ge 10 ]; then
                    info="(10+)"
                else
                    info="(${gitcap_lines})"
                fi
            else
                color="$orange"
                info="🤷‍♂️" #error
            fi
        fi
    fi

    # if [[ "$dir" == "$HOME"* ]]; then
    #     nice_dir='~'
    #     if [[ "$dir" != "$HOME" ]]; then
    #         nice_dir+="${dir#$HOME}"
    #     fi
    # else
    #     nice_dir="$dir"
    # fi

    nice_dir="$(basename "$dir")"
    #    nice_dir="${nice_dir%@*}"

    if $only_show_status; then
        echo -ne "${color}${info}${ansi_off}"
    else
        echo -ne "${color}${info}${nice_dir}${ansi_off} "
        $use_one_line || echo
    fi
done

$use_one_line && echo

exit 0
