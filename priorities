#!/usr/bin/env bash

. "$(dirname -- "${BASH_SOURCE[0]}")/include.sh"

now_doing="$(tugenda now next)" || :      # what have I marked as OMGDOITNOW in agenda?
priorities_file=~/org/priorities.txt # this will be the fall guy
me=$(basename "$0")                  # who am i this lowly script? I might rename me

if [ $# -eq 0 ]; then # uh oh let's tell the newbie what to do
   cat - <<EOM >&2
*** ${me^^} HELP ***

USAGE
   $me [-1] MAXLINES

WHERE
   -1       :   output on one line only [optional]
   MAXLINES :   how many lines to output [mandatory, use 9999 for all
                                         (best I can do for nowðŸ™ƒ]
EOM
   exit 255
fi

# did we get a one-liner request
oneline=false
[ $# -gt 0 ] && [[ "$1" == "-1" ]] && oneline=true && shift

# did we get our MAXLINES argument?
case "$1" in
[0-9]*)
   # good, you may live to see some results
   ;;
*)
   # uh-oh, caller didn't get the idea
   die "argument must be numeric! got $*"
   ;;
esac

doit() {
   if [ -n "$now_doing" ]; then
      echo "${now_doing^^}" | head -n ${1:-3}
   else
      while read -r priority_line; do
         echo "ðŸ”˜ ${priority_line^^}"
      done <"$priorities_file"
      # cat "$priorities_file" | sed -E 's/^/ðŸ”˜ /g'
      # cat "$priorities_file" | head -n ${1:-3}
   fi
}

if $oneline; then
   doit "$@" | head -n $1 | tr '\n' ' '
else
   doit "$@" | head -n $1
fi
